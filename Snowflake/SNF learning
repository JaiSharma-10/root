-------------------------------------------------------------SNF

Databases and schemas are used to organize data stored in Snowflake:

A database is a logical grouping of schemas. Each database belongs to a single Snowflake account.

A schema is a logical grouping of database objects (tables, views, etc.). Each schema belongs to a single database.

Databases are used to group datasets (tables) together. A second-level organizational grouping, within a database, is called a schema. Every time you create a database, Snowflake will automatically create two schemas for you.

The INFORMATION_SCHEMA schema holds a collection of views.  The INFORMATION_SCHEMA schema cannot be deleted (dropped), renamed, or moved.

The PUBLIC schema is created empty and you can fill it with tables, views and other things over time. The PUBLIC schema can be dropped, renamed, or moved at any time.


Identity vs ACCESS
Username password one time Vs role base continuous
Authentication vs Authorization
 
Roles
--5 Roles
ACCOUNTADMIN  - Master of ACCOUNT
SYSADMIN	  - Master of creation of DB and schemas

Role-based Access Control(RBAC)
Discretionary Access Control (DAC). -you own what you create
SNF uses both RABC and DAC


--ROLE CREATION AS INHERITANCE
ACCOUNTADMIN --parent
SECURITYADMIN and SYSADMIN --child

ACCOUNTADMIN -it can manage all aspect of account
	SECURITYADMIN -security
	SYSADMIN -it can manage and create database and warehouse
	USERADMIN -it can manage users


-------------------------------------------------------------------------SNF

IN SNF WAREHOUSE IS NOT PLACE TO STORE DATA , IT IS COMPUTE RESOURCE, OR COMPUTING POWER. WAREHOUSE IS THE MACHINE THAT CRUCHES DATA , BIG MACHINE CAN CRUCH THAT REALLY
FAST LIKE WH-XL

============================================================================

Data warehouses vs Databases

Data warehouses
Store data from multiple sources in a fixed schema for long-term storage and reporting. They are useful for analytics, reporting, and read-heavy operations. Data warehouses can include current and historical data, and they allow business analysts and data scientists to analyze the data. They can also help companies make analytical queries to track variables for business intelligence. Data warehouses are well-suited for OLAP solutions, which can aggregate data for large-scale analytics. 

Databases
Store structured data in tables for short-term data storage and data manipulation tasks. They are ideal for transactional data and applications that require frequent read/write operations. Databases are mainly used for data manipulation and retrieval tasks, and they serve as a management system to organize and process data. They are also good for OLTP solutions, which provide fast data access

--SNOWFLAKE AND ITS BASIC SERVICE -DATA WAREHOUSING

Inside Snowflake, the virtual warehouse is a cluster of compute resources. It provides resources — including memory, temporary storage and CPU — to perform tasks such as DML operation and SQL execution.


--WHAT IS SNOWFLAKE?


Snowflake is a cloud-based data platform that offers data warehousing as its core service. Every Snowflake customer gains access to a dedicated virtual warehouse, which they build based on their storage and processing needs. After that, they migrate their data to the warehouse and implement a new data architecture, which results in all data pipelines leading to the central data repository.

Some of the features of the Snowflake data warehouse include:

Scalability – 
	Snowflake uses massively parallel processing (MPP) architecture, which distributes data across a cluster of independently running machines. This allows the warehouse to scale as needed, multiple times a day. When you have multiple users batch processing or stream processing large volumes of data simultaneously, the platform scales out and dedicates additional resources to you. It scales back down automatically afterward.
	
Built-in security features – 
	There are several security measures built into the platform, such as multi-factor authentication for all users, end-to-end encryption of data, and IP whitelisting.
	
Multi-cloud deployment – 
	The warehouse can be deployed on AWSopens in new tab, Azureopens in new tab, and Google Cloudopens in new tab.
--Grant ownership for all

--After cloning the database, transfer ownership to another role using the GRANT OWNERSHIP (see also example) function using COPY CURRENT GRANTS clause, for example

GRANT OWNERSHIP ON DATABASE mydb TO ROLE developer COPY CURRENT GRANTS;  
GRANT OWNERSHIP ON ALL SCHEMAS IN DATABASE mydb TO ROLE developer COPY CURRENT GRANTS;
GRANT OWNERSHIP ON ALL TABLES IN DATABASE mydb TO ROLE developer COPY CURRENT GRANTS; 
GRANT OWNERSHIP ON ALL VIEWS IN DATABASE mydb TO ROLE developer COPY CURRENT GRANTS;

create DATABASE GARDEN_PLANTS;

drop schema GARDEN_PLANTS.PUBLIC;

--VEGGIES, FRUITS and FLOWERS

create schema GARDEN_PLANTS.VEGGIES;
create schema GARDEN_PLANTS.FRUITS;
create schema GARDEN_PLANTS.FLOWERS;

describe database GARDEN_PLANTS;

show databases;
show schemas;

SHOW SCHEMAS IN ACCOUNT;


------------------------------------------------SNF
	
DATA MODELING and NORMALIZATION

--DATA MODELING

Data modeling is the process of organizing and mapping data using simplified diagrams, symbols, and text to represent data associations and flow.

Types of Approaches
There are four primary approaches to data modeling.  

1. Hierarchical
	A hierarchical database model organizes data into tree-like structures with data stored as interconnected records with one-to-many arrangements. Hierarchical
	database models are standard in XML and GIS.  

2. Relational
	A relational data model, AKA a relational model, manages data by providing methodology for specifying data and queries. Most relational data models use SQL for 
	data definition and query language.

3. Entity-relationship
	Entity-relationship models use diagrams to portray data and their relationships. Integrated with relational data models, entity-relationship models graphically 
	depict data elements to understand underlying models. 

4. Graph
	Graph data models are visualizations of complex relationships within data sets that are limited by a chosen domain.


Types of Data Models
There are three primary types of data models. 

1. Conceptual, defining what data system contains, used to organize, scope, and define business concepts and rules.

2. Logical, defining how a data system should be implemented, used to develop a technical map of rules and data structures.

3. Physical, defining how the data system will be implemented according to the specific use case.


--WHAT IS DATA NORMALIZATION?

Data normalization applies a set of formal rules to develop standardized, organized data, and eliminates data anomalies that cause difficulty for analysis. The clean data 
can then be easily grouped, understood, and interpreted. Without normalization, valuable data will go unused. 

Depending on your use case, data normalization may happen prior to or after loading the data into your data warehouse or platform. Some platforms, such as Snowflake, allow 
complete flexibility so you can store massive amounts of raw data and normalize only the data you need as you need it.

--DATA NORMALIZATION RULES
Data normalization rules are sequential—as you move through each rule, you normalize the data further. For this reason, you can think of normalization rules as “levels” of
normalization. Although there are five rules in total, only three are commonly used for practical reasons, since too much normalization results in inflexibility in the 
data model. 

--1NF (First Normal Form) rule (Remove duplicate)
	The first rule is about ensuring there are no repeating entries in a group. All attributes must have a unique name, and entities may consist of only two dimensions.
(You’ll need to create a new entity for additional dimensions.) Each entry must have only a single value for each cell, and each record must be unique. The goal of this 
first rule is to make it easier to search the data.

--2NF (Second Normal Form) rule (Unique primary key by segregating table further)
	The second rule is designed to eliminate redundant data. Before applying the 2NF rule, you must be sure that the 1NF rule has been fully applied. Data that is in 
the 2NF state will have only one primary key. For this reason, you must separate data by placing all subsets of data that can be placed in multiple rows into separate 
tables. Relationships can then be created via foreign key labels.

--3NF (Third Normal Form) rule (remove transitive)
	The third rule eliminates transitive dependency. As before, data must have achieved 1NF and 2NF status before you can apply the 3NF rule. Transitive dependency is
when a nonprime attribute depends on other nonprime attributes instead of depending on the prime attributes or primary key. So the third rule ensures that no attribute 
within an entity is dependent on a nonprime attribute that depends on the primary key. For this reason, if the primary key is changed, all data impacted by the change has 
to be put into a new table with a new foreign key.

------------------------------------------------------------------SNF
GETTING ROWS OF DATA INTO TABLE

Using an INSERT statement from the Worksheet. 
Using the Load Data Wizard.
Using COPY INTO statements. 

------------------------------------------------------------------SNF
--If Warehouse in SNF is NOT place to store data then
--WHERE DOES DATA IS STORED IN SNOWFLAKE?


Database Storage
When data is loaded into Snowflake, Snowflake reorganizes that data into its internal optimized, compressed, columnar format. Snowflake stores this optimized data in cloud storage.

--Elaborate

Snowflake, a cloud-based data warehousing platform, stores data in cloud storage after reorganizing it into a compressed, COLUMNAR FORMAT. Snowflake manages all aspects of data storage, including organization, file size, structure, compression, metadata, and statistics.
 
Snowflake storage layer uses scalable CLOUD BLOB STORAGE to store data, tables, and query results. The storage layer is designed to scale independently from compute resources, and customers can increase and reduce storage and analytics requirements independently. 

Snowflake stores data in different places depending on the version of Snowflake: 
AWS version: Stores data on S3 
Azure version: Stores data on Azure Blob 

Snowflake stores all data in database tables, which are logically structured as collections of columns and rows. Within each micro-partition, data is stored in a columnar data structure, allowing better compression and efficient access only to those columns required by a query. 
Customers can only access the data objects stored by Snowflake through SQL query operations run using Snowflake. 

